# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T17:49:41+00:00

from __future__ import annotations

from datetime import date as date_aliased
from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import AnyUrl, BaseModel, Field, conint


class Error(BaseModel):
    message: Optional[str] = Field(
        None,
        description='An error message',
        examples=['Error: No holiday with id “100”'],
    )
    status: Optional[conint(ge=100, le=599)] = Field(
        None, description='An HTTP status code', examples=[404]
    )
    timestamp: Optional[datetime] = Field(
        None, description='A UTC ISO timestamp', examples=['2020-04-27T05:41:10.710Z']
    )


class Federal(Enum):
    integer_1 = 1
    integer_0 = 0


class OptionalModel(Enum):
    integer_1 = 1


class Id(Enum):
    AB = 'AB'
    BC = 'BC'
    MB = 'MB'
    NB = 'NB'
    NL = 'NL'
    NS = 'NS'
    NT = 'NT'
    NU = 'NU'
    ON = 'ON'
    PE = 'PE'
    QC = 'QC'
    SK = 'SK'
    YT = 'YT'


class Holidays(BaseModel):
    href: Optional[str] = Field(
        None,
        description='Domain to get all holidays',
        examples=['https://canada-holidays.ca/api/v1/holidays'],
    )


class Provinces(BaseModel):
    href: Optional[str] = Field(
        None,
        description='Domain to get all provinces',
        examples=['https://canada-holidays.ca/api/v1/provinces'],
    )


class Self(BaseModel):
    href: Optional[str] = Field(
        None, description='Root domain', examples=['https://canada-holidays.ca/api/v1/']
    )


class Spec(BaseModel):
    href: Optional[str] = Field(
        None, examples=['https://canada-holidays.ca/api/v1/spec']
    )


class FieldLinks(BaseModel):
    holidays: Optional[Holidays] = None
    provinces: Optional[Provinces] = None
    self: Optional[Self] = None
    spec: Optional[Spec] = None


class ApiV1GetResponse(BaseModel):
    field_links: Optional[FieldLinks] = Field(None, alias='_links')
    message: Optional[str] = Field(
        None, description='A welcome message', examples=['Hello / Bonjour!']
    )


class Federal1(Enum):
    field_1 = '1'
    field_0 = '0'
    true = 'true'
    false = 'false'


class Optional1(Enum):
    field_1 = '1'
    field_0 = '0'
    true = 'true'
    false = 'false'


class ApiV1HolidaysHolidayIdGetResponse1(BaseModel):
    error: Optional[Error] = None


class ApiV1ProvincesProvinceIdGetResponse1(BaseModel):
    error: Optional[Error] = None


class ProvinceId(Enum):
    AB = 'AB'
    BC = 'BC'
    MB = 'MB'
    NB = 'NB'
    NL = 'NL'
    NS = 'NS'
    NT = 'NT'
    NU = 'NU'
    ON = 'ON'
    PE = 'PE'
    QC = 'QC'
    SK = 'SK'
    YT = 'YT'


class Holiday(BaseModel):
    date: date_aliased = Field(
        ...,
        description='ISO date: the literal date of the holiday',
        examples=['2020-12-26'],
    )
    federal: Federal = Field(
        ...,
        description='Whether this holiday is observed by federally-regulated industries.',
    )
    id: conint(ge=1, le=32) = Field(
        ..., description='Primary key for a holiday', examples=[2]
    )
    nameEn: str = Field(..., description='English name', examples=['Louis Riel Day'])
    nameFr: str = Field(..., description='French name', examples=['Journée Louis Riel'])
    observedDate: date_aliased = Field(
        ...,
        description='ISO date: when this holiday is observed',
        examples=['2020-12-28'],
    )
    optional: Optional[OptionalModel] = Field(
        None,
        description='Whether this is a province-wide statutory holiday, or one that is optional for employers.',
    )
    provinces: Optional[List[Province]] = None


class Province(BaseModel):
    id: Id = Field(..., description='Canadian province abbreviations', examples=['MB'])
    nameEn: str = Field(..., description='English name', examples=['Manitoba'])
    nameFr: str = Field(..., description='French name', examples=['Manitoba'])
    nextHoliday: Optional[Holiday] = None
    optional: Optional[OptionalModel] = Field(
        None, description='Whether this province optionally observes a given holiday.'
    )
    provinces: Optional[List[Holiday]] = None
    sourceEn: str = Field(
        ...,
        description='Name of reference page with public holidays for this region',
        examples=['What are the general holidays in Manitoba?'],
    )
    sourceLink: AnyUrl = Field(
        ...,
        description='URL to public holidays reference for this region',
        examples=[
            'https://www.gov.mb.ca/labour/standards/doc,gen-holidays-after-april-30-07,factsheet.html#q12'
        ],
    )


class ApiV1HolidaysGetResponse(BaseModel):
    holidays: Optional[List[Holiday]] = None


class ApiV1HolidaysHolidayIdGetResponse(BaseModel):
    holiday: Optional[Holiday] = None


class ApiV1ProvincesGetResponse(BaseModel):
    provinces: Optional[List[Province]] = None


class ApiV1ProvincesProvinceIdGetResponse(BaseModel):
    province: Optional[Province] = None


Holiday.model_rebuild()
